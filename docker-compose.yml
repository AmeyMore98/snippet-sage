version: "3.8"

services:
  postgres:
    image: pgvector/pgvector:pg18
    container_name: snippet-sage-postgres
    environment:
      POSTGRES_USER: snippet_sage
      POSTGRES_PASSWORD: snippet_sage
      POSTGRES_DB: snippet_sage
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U snippet_sage"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: snippet-sage-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: snippet-sage-migrations
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://snippet_sage:snippet_sage@postgres:5432/snippet_sage}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      DSPY_MODEL: ${DSPY_MODEL}
      DSPY_LM_API_KEY: ${DSPY_LM_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    command: aerich upgrade
    restart: "no"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: snippet-sage-app
    ports:
      - "9090:8080"
    environment:
      DATABASE_URL: postgres://snippet_sage:snippet_sage@postgres:5432/snippet_sage
      REDIS_URL: redis://redis:6379/0
      DSPY_MODEL: ${DSPY_MODEL}
      DSPY_LM_API_KEY: ${DSPY_LM_API_KEY}
      WORKERS: 4
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: snippet-sage-worker
    environment:
      DATABASE_URL: postgres://snippet_sage:snippet_sage@postgres:5432/snippet_sage
      REDIS_URL: redis://redis:6379/0
      DSPY_MODEL: ${DSPY_MODEL}
      DSPY_LM_API_KEY: ${DSPY_LM_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: dramatiq app.jobs.ingestion_job --processes 2 --threads 4
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
